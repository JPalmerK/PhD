# Get random waiting times from three days before the encounter
dateidx=which(daily_occ$UsableDates == DolDetDate)
if(isTRUE(dateidx>3) & sum(aa>0)>0){
# If sufficient gap, then grab 30 random points from the prvious days
if(all(daily_occ$EncounterSpp[(dateidx-3):(dateidx-1)]==0)){
# Dates from which control periods are drawn
ControlDates=daily_occ$UsableDates[(dateidx-3):(dateidx-1)]
# Control Times
ControlTimes=runif(n = 30, min = daily_occ$UsableDates[dateidx-3], max = daily_occ$UsableDates[dateidx-1])
# Time difference in days
for(kk in 1:30){
aa=PPsub$MatlabDecDate-ControlTimes[kk]
RandoMWait[jj]=min(aa[aa>0])
rm(aa)
}
controldf= data.frame(Dur=RandoMWait,
UnitLoc=substr(Unit, 1,6),
Year=PPsub$Year[1],
EncounterSpp='Control')
doldf=data.frame(Dur=DolWait,
UnitLoc=substr(Unit, 1,6),
Year=PPsub$Year[1],
EncounterSpp=Cetsub$EncounterSpp)
CetaceanWaitingTimes=rbind(CetaceanWaitingTimes,controldf, doldf)
}
}
isTRUE(dateidx>3) & sum(aa>0)>0
all(daily_occ$EncounterSpp[(dateidx-3):(dateidx-1)]==0)
ControlDates=daily_occ$UsableDates[(dateidx-3):(dateidx-1)]
ControlTimes=runif(n = 30, min = daily_occ$UsableDates[dateidx-3], max = daily_occ$UsableDates[dateidx-1])
ControlWait=numeric(length=30)
# Time difference in days
for(kk in 1:30){
aa=PPsub$MatlabDecDate-ControlTimes[kk]
ControlWait[jj]=min(aa[aa>0])
rm(aa)
}
controldf= data.frame(Dur=ControlWait,
UnitLoc=substr(Unit, 1,6),
Year=PPsub$Year[1],
EncounterSpp='Control')
doldf=data.frame(Dur=DolWait,
UnitLoc=substr(Unit, 1,6),
Year=PPsub$Year[1],
EncounterSpp=Cetsub$EncounterSpp)
CetaceanWaitingTimes=rbind(CetaceanWaitingTimes,controldf, doldf)
# Grab random and dolphin waiting times
for(ii in 1:length(unique(Trains$UnitLocYear))){
Unit=unique(Trains$UnitLocYear)[ii]
Cetsub=OthCeteEncounters[OthCeteEncounters$UnitLocYear==Unit,]
if(isTRUE(nrow(Cetsub)>0)){
PPsub=HPTrains[HPTrains$UnitLocYear==Unit,]
metasub=meta[meta$UnitLocYear==Unit,]
# Aggregate detections for weeks
Cetsub$DayBin=cut(Cetsub$EncounterMid, floor(metasub$MatlabEnd- metasub$MatlabStart))
# Get differences from the midpoint of the encounter until the next PP encounter
DolWait=numeric(length = nrow(Cetsub))
if(metasub$Year[1]==2015){
UsableDates=seq(min(metasub$MatlabStart), max(metasub$MatlabEnd))}else{
UsableDates=seq(metasub$MatlabStart, metasub$MatlabEnd)
}
daily_occ=data.frame(UsableDates= UsableDates)
DolDaily=aggregate(EncounterSpp~round(EncounterMid), data=Cetsub, FUN=length)
colnames(DolDaily)[1]='UsableDates'
daily_occ=merge(daily_occ, DolDaily, all.x = TRUE, by='UsableDates')
daily_occ[is.na(daily_occ)]=0
# 'Baseline occurrence at each site was characterized by randomly selecting 100 control
#  points from the week prior to the seismic survey and calculating the waiting times
#  from these points to the next porpoise detection'
for(jj in 1:nrow(Cetsub)){
DolDetDate=round(Cetsub$EncounterMid[jj])
# Get waiting time from dolpin to next encounter
aa=PPsub$MatlabDecDate-Cetsub$EncounterMid[jj]
DolWait[jj]=min(aa[aa>0])
# Get random waiting times from three days before the encounter
dateidx=which(daily_occ$UsableDates == DolDetDate)
if(isTRUE(dateidx>3) & sum(aa>0)>0){
# If sufficient gap, then grab 30 random points from the prvious days
if(all(daily_occ$EncounterSpp[(dateidx-3):(dateidx-1)]==0)){
# Dates from which control periods are drawn
ControlDates=daily_occ$UsableDates[(dateidx-3):(dateidx-1)]
# Control Times
ControlTimes=runif(n = 30, min = daily_occ$UsableDates[dateidx-3], max = daily_occ$UsableDates[dateidx-1])
ControlWait=numeric(length=30)
# Time difference in days
for(kk in 1:30){
aa=PPsub$MatlabDecDate-ControlTimes[kk]
ControlWait[jj]=min(aa[aa>0])
rm(aa)
}
controldf= data.frame(Dur=ControlWait,
UnitLoc=substr(Unit, 1,6),
Year=PPsub$Year[1],
EncounterSpp='Control')
doldf=data.frame(Dur=DolWait,
UnitLoc=substr(Unit, 1,6),
Year=PPsub$Year[1],
EncounterSpp=Cetsub$EncounterSpp)
CetaceanWaitingTimes=rbind(CetaceanWaitingTimes,controldf, doldf)
}
}
}
}
print(paste(ii, 'of', length(unique(Trains$UnitLocYear))))
}
CetaceanWaitingTimes$EncounterSpp=factor(CetaceanWaitingTimes$EncounterSpp,
levels=c('Control', 'COD/BND', 'WBD/RSD', 'UNK'))
CetaceanWaitingTimes$AllDol=factor(CetaceanWaitingTimes$AllDol,
levels=c('Control', 'Dolphin'))
data_sub=data_sub[complete.cases(data_sub),]
data_sub=subset(CetaceanWaitingTimes, GroupId==unique(CetaceanWaitingTimes$GroupId)[ii])
ii=1
data_sub=subset(CetaceanWaitingTimes, GroupId==unique(CetaceanWaitingTimes$GroupId)[ii])
CetaceanWaitingTimes$GroupId=substr(CetaceanWaitingTimes$UnitLoc, 1,3)
CetaceanWaitingTimes$ShoreDist=substr(CetaceanWaitingTimes$UnitLoc, 5,6)
data_sub=subset(CetaceanWaitingTimes, GroupId==unique(CetaceanWaitingTimes$GroupId)[ii])
data_sub=data_sub[complete.cases(data_sub),]
data_sub=data_sub[!is.infinite(data_sub$Dur),]
View(data_sub)
CetaceanWaitingTimes$AllDol= ifelse(CetaceanWaitingTimes$EncounterSpp=='Control',
'Control', 'Dolphin')
data_sub=subset(CetaceanWaitingTimes, GroupId==unique(CetaceanWaitingTimes$GroupId)[ii])
data_sub=data_sub[complete.cases(data_sub),]
data_sub=data_sub[!is.infinite(data_sub$Dur),]
ggplot(data_sub, aes(Dur, ..density.., colour = EncounterSpp)) +
geom_freqpoly(binwidth = .1) +
facet_wrap(~ShoreDist)+
scale_color_manual(values=cbbPalette) +
theme_light()
ggplot(data_sub, aes(Dur, ..density.., colour = AllDol)) +
geom_freqpoly(binwidth = .1) +
facet_wrap(~ShoreDist) +
scale_color_manual(values=cbbPalette) +
theme_light()
p_all=list()
p_spp=list()
for(ii in 1:10){
data_sub=subset(CetaceanWaitingTimes, GroupId==unique(CetaceanWaitingTimes$GroupId)[ii])
data_sub=data_sub[complete.cases(data_sub),]
data_sub=data_sub[!is.infinite(data_sub$Dur),]
p_spp[[ii]]=
ggplot(data_sub, aes(Dur, ..density.., colour = EncounterSpp)) +
geom_freqpoly(binwidth = .1) +
facet_wrap(~ShoreDist)+
scale_color_manual(values=cbbPalette) +
theme_light()
p_all[[ii]]=
ggplot(data_sub, aes(Dur, ..density.., colour = AllDol)) +
geom_freqpoly(binwidth = .1) +
facet_wrap(~ShoreDist) +
scale_color_manual(values=cbbPalette) +
theme_light()
}
p_all[[1]]
p_all[[2]]
p_all[[3]]
p_all[[4]]
p_all[[5]]
p_all[[6]]
p_all[[7]]
p_all[[8]]
p_all[[9]]
p_all[[10]]
library(glmm)
?glmm
?glmm.family
mod=glmm(Dur~EncounterSpp,
family.glmm = negative.binomial(link = "log"),
data=CetaceanWaitingTimes)
mod=glmm(Dur~EncounterSpp,
family.glmm = negative.binomial(2,link = "log"),
data=CetaceanWaitingTimes)
m1 <- glm.nb(Dur ~ EncounterSpp + ShoreDist, data = CetaceanWaitingTimes)
m1 <- glm.nb(Dur ~ EncounterSpp , data = CetaceanWaitingTimes)
m3 <- glm(Dur ~ EncounterSpp + ShoreDist, family = "poisson", data = CetaceanWaitingTimes)
View(CetaceanWaitingTimes)
CetaceanWaitingTimes[2031]
CetaceanWaitingTimes$Dur[2031]
ii=1
Unit=unique(Trains$UnitLocYear)[ii]
Cetsub=OthCeteEncounters[OthCeteEncounters$UnitLocYear==Unit,]
isTRUE(nrow(Cetsub)>0)
PPsub=HPTrains[HPTrains$UnitLocYear==Unit,]
metasub=meta[meta$UnitLocYear==Unit,]
# Aggregate detections for weeks
Cetsub$DayBin=cut(Cetsub$EncounterMid, floor(metasub$MatlabEnd- metasub$MatlabStart))
# Get differences from the midpoint of the encounter until the next PP encounter
DolWait=numeric(length = nrow(Cetsub))
if(metasub$Year[1]==2015){
UsableDates=seq(min(metasub$MatlabStart), max(metasub$MatlabEnd))}else{
UsableDates=seq(metasub$MatlabStart, metasub$MatlabEnd)
}
daily_occ=data.frame(UsableDates= UsableDates)
DolDaily=aggregate(EncounterSpp~round(EncounterMid), data=Cetsub, FUN=length)
colnames(DolDaily)[1]='UsableDates'
daily_occ=merge(daily_occ, DolDaily, all.x = TRUE, by='UsableDates')
daily_occ[is.na(daily_occ)]=0
jj in 1:nrow(Cetsub)
jj=1
DolDetDate=round(Cetsub$EncounterMid[jj])
# Get waiting time from dolpin to next encounter
aa=PPsub$MatlabDecDate-Cetsub$EncounterMid[jj]
DolWait[jj]=min(aa[aa>0])
# Get random waiting times from three days before the encounter
dateidx=which(daily_occ$UsableDates == DolDetDate)
isTRUE(dateidx>3) & sum(aa>0)>0
all(daily_occ$EncounterSpp[(dateidx-3):(dateidx-1)]==0)
ControlDates=daily_occ$UsableDates[(dateidx-3):(dateidx-1)]
ControlDates
ControlTimes
ControlWait
ControlWait=numeric(length=30)
PPsub$MatlabDecDate-ControlTimes[kk]
min(aa[aa>0])
ControlWait[jj]=min(aa[aa>0])
ControlWait
for(kk in 1:30){
aa=PPsub$MatlabDecDate-ControlTimes[kk]
ControlWait[jj]=min(aa[aa>0])
rm(aa)
}
ControlWait
ControlWait[kk]=min(aa[aa>0])
for(kk in 1:30){
aa=PPsub$MatlabDecDate-ControlTimes[kk]
ControlWait[kk]=min(aa[aa>0])
rm(aa)
}
ControlWait
PPsub$MatlabDecDate-ControlTimes[kk]
PPsub$MatlabDecDate
ControlTimes[kk]
Cetsub$EncounterMid[jj]
PPsub$MatlabDecDate-Cetsub$EncounterMid[jj]
runif(n = 30, min = daily_occ$UsableDates[dateidx-3], max = daily_occ$UsableDates[dateidx-1])
min(PPsub$MatlabDecDate)
PPsub=HPTrains[HPTrains$UnitLocYear==Unit,]
PPsub
range(PPsub$MatlabDecDate)
ControlTimes[kk]
range(UsableDates)
metasub$Year
metasub$MatlabStart, metasub$MatlabEnd
seq(metasub$MatlabStart, metasub$MatlabEnd)
Unit
Cetsub=OthCeteEncounters[OthCeteEncounters$UnitLocYear==Unit,]
PPsub=HPTrains[HPTrains$UnitLocYear==Unit,]
metasub=meta[meta$UnitLocYear==Unit,]
nrow(Cetsub)
PPsub=HPTrains[HPTrains$UnitLocYear==Unit,]
metasub=meta[meta$UnitLocYear==Unit,]
range(PPsub$MatlabDecDate)
diff(metasub$MatlabStart, metasub$MatlabEnd)
Cetsub$DayBin=cut(Cetsub$EncounterMid, floor(metasub$MatlabEnd- metasub$MatlabStart))
metasub
View(metasub)
PPsub=HPTrains[HPTrains$UnitLocYear==Unit,]
metasub=meta[meta$UnitLocYear==Unit,]
DolWait=numeric(length = nrow(Cetsub))
if(metasub$Year[1]==2015){
UsableDates=seq(min(metasub$MatlabStart), max(metasub$MatlabEnd))}else{
UsableDates=seq(metasub$MatlabStart, metasub$MatlabEnd)
}
daily_occ=data.frame(UsableDates= UsableDates)
DolDaily=aggregate(EncounterSpp~round(EncounterMid), data=Cetsub, FUN=length)
colnames(DolDaily)[1]='UsableDates'
daily_occ=merge(daily_occ, DolDaily, all.x = TRUE, by='UsableDates')
daily_occ[is.na(daily_occ)]=0
jj
DolDetDate=round(Cetsub$EncounterMid[jj])
aa=PPsub$MatlabDecDate-Cetsub$EncounterMid[jj]
DolWait[jj]=min(aa[aa>0])
aa
min(aa[aa>0])
DolDetDate
dateidx=which(daily_occ$UsableDates == DolDetDate)
dateidx
isTRUE(dateidx>3) & sum(aa>0)>0
all(daily_occ$EncounterSpp[(dateidx-3):(dateidx-1)]==0)
ControlDates=daily_occ$UsableDates[(dateidx-3):(dateidx-1)]
ControlDates
ControlTimes
ControlTimes=runif(n = 30, min = min(ControlDates), max = max(ControlDates))
numeric
ControlWait=numeric(length=30)
ControlTimes=runif(n = 30, min = min(ControlDates), max = max(ControlDates))
ControlWait=numeric(length=30)
# Time difference in days
for(kk in 1:30){
aa=PPsub$MatlabDecDate-ControlTimes[kk]
ControlWait[kk]=min(aa[aa>0])
rm(aa)
}
ControlWait
data.frame(Dur=ControlWait,
UnitLoc=substr(Unit, 1,6),
Year=PPsub$Year[1],
EncounterSpp='Control')
CetaceanWaitingTimes=data.frame(Dur=numeric(length=0),
UnitLoc=character(length=0),
Year=numeric(length=0),
EncounterSpp=character(length=0))
# Grab random and dolphin waiting times
for(ii in 1:length(unique(Trains$UnitLocYear))){
Unit=unique(Trains$UnitLocYear)[ii]
Cetsub=OthCeteEncounters[OthCeteEncounters$UnitLocYear==Unit,]
if(isTRUE(nrow(Cetsub)>0)){
PPsub=HPTrains[HPTrains$UnitLocYear==Unit,]
metasub=meta[meta$UnitLocYear==Unit,]
# Get differences from the midpoint of the encounter until the next PP encounter
DolWait=numeric(length = nrow(Cetsub))
if(metasub$Year[1]==2015){
UsableDates=seq(min(metasub$MatlabStart), max(metasub$MatlabEnd))}else{
UsableDates=seq(metasub$MatlabStart, metasub$MatlabEnd)
}
daily_occ=data.frame(UsableDates= UsableDates)
DolDaily=aggregate(EncounterSpp~round(EncounterMid), data=Cetsub, FUN=length)
colnames(DolDaily)[1]='UsableDates'
daily_occ=merge(daily_occ, DolDaily, all.x = TRUE, by='UsableDates')
daily_occ[is.na(daily_occ)]=0
# 'Baseline occurrence at each site was characterized by randomly selecting 100 control
#  points from the week prior to the seismic survey and calculating the waiting times
#  from these points to the next porpoise detection'
for(jj in 1:nrow(Cetsub)){
DolDetDate=round(Cetsub$EncounterMid[jj])
# Get waiting time from dolpin to next encounter
aa=PPsub$MatlabDecDate-Cetsub$EncounterMid[jj]
DolWait[jj]=min(aa[aa>0])
# Get random waiting times from three days before the encounter
dateidx=which(daily_occ$UsableDates == DolDetDate)
if(isTRUE(dateidx>3) & sum(aa>0)>0){
# If sufficient gap, then grab 30 random points from the prvious days
if(all(daily_occ$EncounterSpp[(dateidx-3):(dateidx-1)]==0)){
# Dates from which control periods are drawn
ControlDates=daily_occ$UsableDates[(dateidx-3):(dateidx-1)]
# Control Times
ControlTimes=runif(n = 30, min = min(ControlDates), max = max(ControlDates))
ControlWait=numeric(length=30)
# Time difference in days
for(kk in 1:30){
aa=PPsub$MatlabDecDate-ControlTimes[kk]
ControlWait[kk]=min(aa[aa>0])
rm(aa)
}
controldf= data.frame(Dur=ControlWait,
UnitLoc=substr(Unit, 1,6),
Year=PPsub$Year[1],
EncounterSpp='Control')
doldf=data.frame(Dur=DolWait,
UnitLoc=substr(Unit, 1,6),
Year=PPsub$Year[1],
EncounterSpp=Cetsub$EncounterSpp)
CetaceanWaitingTimes=rbind(CetaceanWaitingTimes,controldf, doldf)
}
}
}
}
print(paste(ii, 'of', length(unique(Trains$UnitLocYear))))
}
# Fix level orders
CetaceanWaitingTimes$EncounterSpp=factor(CetaceanWaitingTimes$EncounterSpp,
levels=c('Control', 'COD/BND', 'WBD/RSD', 'UNK'))
CetaceanWaitingTimes$AllDol=factor(CetaceanWaitingTimes$AllDol,
levels=c('Control', 'Dolphin'))
CetaceanWaitingTimes$GroupId=substr(CetaceanWaitingTimes$UnitLoc, 1,3)
CetaceanWaitingTimes$ShoreDist=substr(CetaceanWaitingTimes$UnitLoc, 5,6)
CetaceanWaitingTimes$AllDol= ifelse(CetaceanWaitingTimes$EncounterSpp=='Control',
'Control', 'Dolphin')
# Make histograms for dolphin species and all dolphins
# Make plots for 10 deployment locations #########################################
p_all=list()
p_spp=list()
for(ii in 1:10){
data_sub=subset(CetaceanWaitingTimes, GroupId==unique(CetaceanWaitingTimes$GroupId)[ii])
data_sub=data_sub[complete.cases(data_sub),]
data_sub=data_sub[!is.infinite(data_sub$Dur),]
p_spp[[ii]]=
ggplot(data_sub, aes(Dur, ..density.., colour = EncounterSpp)) +
geom_freqpoly(binwidth = .1) +
facet_wrap(~ShoreDist)+
scale_color_manual(values=cbbPalette) +
theme_light()
p_all[[ii]]=
ggplot(data_sub, aes(Dur, ..density.., colour = AllDol)) +
geom_freqpoly(binwidth = .1) +
facet_wrap(~ShoreDist) +
scale_color_manual(values=cbbPalette) +
theme_light()
}
CetaceanWaitingTimes$EncounterSpp=factor(CetaceanWaitingTimes$EncounterSpp,
levels=c('Control', 'COD/BND', 'WBD/RSD', 'UNK'))
CetaceanWaitingTimes$AllDol=factor(CetaceanWaitingTimes$AllDol,
levels=c('Control', 'Dolphin'))
CetaceanWaitingTimes$GroupId=substr(CetaceanWaitingTimes$UnitLoc, 1,3)
CetaceanWaitingTimes$ShoreDist=substr(CetaceanWaitingTimes$UnitLoc, 5,6)
CetaceanWaitingTimes$AllDol= ifelse(CetaceanWaitingTimes$EncounterSpp=='Control',
'Control', 'Dolphin')
p_all=list()
p_spp=list()
for(ii in 1:10){
data_sub=subset(CetaceanWaitingTimes, GroupId==unique(CetaceanWaitingTimes$GroupId)[ii])
data_sub=data_sub[complete.cases(data_sub),]
data_sub=data_sub[!is.infinite(data_sub$Dur),]
p_spp[[ii]]=
ggplot(data_sub, aes(Dur, ..density.., colour = EncounterSpp)) +
geom_freqpoly(binwidth = .1) +
facet_wrap(~ShoreDist)+
scale_color_manual(values=cbbPalette) +
theme_light()
p_all[[ii]]=
ggplot(data_sub, aes(Dur, ..density.., colour = AllDol)) +
geom_freqpoly(binwidth = .1) +
facet_wrap(~ShoreDist) +
scale_color_manual(values=cbbPalette) +
theme_light()
}
p_all
for(ii in 1:10){
data_sub=subset(CetaceanWaitingTimes, GroupId==unique(CetaceanWaitingTimes$GroupId)[ii])
data_sub=data_sub[complete.cases(data_sub),]
data_sub=data_sub[!is.infinite(data_sub$Dur),]
p_spp[[ii]]=
ggplot(data_sub, aes(Dur, ..density.., colour = EncounterSpp)) +
geom_freqpoly(binwidth = .1) +
facet_wrap(~ShoreDist)+
scale_color_manual(values=cbbPalette) +
ggtitle(GroupId)+
theme_light()
p_all[[ii]]=
ggplot(data_sub, aes(Dur, ..density.., colour = AllDol)) +
geom_freqpoly(binwidth = .1) +
facet_wrap(~ShoreDist) +
scale_color_manual(values=cbbPalette) +
ggtitle(GroupId)+
theme_light()
}
ggplot(data_sub, aes(Dur, ..density.., colour = EncounterSpp)) +
geom_freqpoly(binwidth = .1) +
facet_wrap(~ShoreDist)+
scale_color_manual(values=cbbPalette) +
ggtitle(data_sub$GroupId[1])+
theme_light()
mod=glmm(Dur~EncounterSpp,
family.glmm = negative.binomial(2,link = "log"),
data=CetaceanWaitingTimes)
m1 <- glm.nb(Dur ~ EncounterSpp , data = CetaceanWaitingTimes)
m3 <- glm(Dur ~ EncounterSpp + ShoreDist, family = "poisson", data = CetaceanWaitingTimes)
log(Dur)
log(CetaceanWaitingTimes$Dur)
CetaceanWaitingTimes=CetaceanWaitingTimes[complete.cases(CetaceanWaitingTimes),]
CetaceanWaitingTimes=CetaceanWaitingTimes[!is.infinite(CetaceanWaitingTimes$Dur),]
p_all=list()
p_spp=list()
for(ii in 1:10){
data_sub=subset(CetaceanWaitingTimes, GroupId==unique(CetaceanWaitingTimes$GroupId)[ii])
data_sub=data_sub[complete.cases(data_sub),]
data_sub=data_sub[!is.infinite(data_sub$Dur),]
p_spp[[ii]]=
ggplot(data_sub, aes(Dur, ..density.., colour = EncounterSpp)) +
geom_freqpoly(binwidth = .1) +
facet_wrap(~ShoreDist)+
scale_color_manual(values=cbbPalette) +
ggtitle(data_sub$GroupId[1])+
theme_light()
p_all[[ii]]=
ggplot(data_sub, aes(Dur, ..density.., colour = AllDol)) +
geom_freqpoly(binwidth = .1) +
facet_wrap(~ShoreDist) +
scale_color_manual(values=cbbPalette) +
ggtitle(data_sub$GroupId[1])+
theme_light()
}
p_spp[6]
p_spp[7]
m1 <- glm.nb(Dur ~ EncounterSpp , data = CetaceanWaitingTimes)
m3 <- glm(Dur ~ EncounterSpp + ShoreDist, family = "poisson", data = CetaceanWaitingTimes)
pchisq(2 * (logLik(m1) - logLik(m3)), df = 1, lower.tail = FALSE)
summary(m1)
pchisq(2 * (logLik(m1) - logLik(m3)), df = 1, lower.tail = FALSE)
anova(m1, m3)
m2 <- update(m1, . ~ . - prog)
anova(m1, m2)
est <- cbind(Estimate = coef(m1), confint(m1))
est
?negative.binomial
m1 <- glm.nb(Dur ~ EncounterSpp + ShoreDist + Year, data = CetaceanWaitingTimes)
m3 <- glm(Dur ~ EncounterSpp + ShoreDist + Year, family = "poisson", data = CetaceanWaitingTimes)
warnings()
glmFamily
?glm
m3 <- glm(Dur ~ EncounterSpp + ShoreDist + Year, family = "quasibinomial", data = CetaceanWaitingTimes)
m3 <- glm(Dur ~ EncounterSpp + ShoreDist + Year, family = "quasipoisson", data = CetaceanWaitingTimes)
summary(m3)
m3 <- glm(Dur ~ EncounterSpp + ShoreDist + Year+UnitLoc, family = "quasipoisson", data = CetaceanWaitingTimes)
summary(m3)
m3 <- glm(Dur ~ EncounterSpp + (1:UnitLoc), family = "quasipoisson", data = CetaceanWaitingTimes)
summary(m3)
m3 <- glmm(Dur ~ EncounterSpp + (1:UnitLoc), family = "quasipoisson", data = CetaceanWaitingTimes)
m3 <- glmer(Dur ~ EncounterSpp + ShoreDist+ (1|UnitLoc), family = "quasipoisson", data = CetaceanWaitingTimes)
?glmer
m3 <- glmer(Dur ~ EncounterSpp + ShoreDist+ (1|UnitLoc),
family = quasipoisson(link = "log"), data = CetaceanWaitingTimes)
m3 <- glmer(Dur ~ EncounterSpp + ShoreDist,
family = quasipoisson(link = "log"), data = CetaceanWaitingTimes)
m3 <- glmer(Dur ~ EncounterSpp*ShoreDist+EncounterSpp*GroupId,
family = quasipoisson(link = "log"), data = CetaceanWaitingTimes)
m3 <- glmer(Dur ~ EncounterSpp*ShoreDist+EncounterSpp*GroupId,
family =poisson, data = CetaceanWaitingTimes)
m3 <- glmer(Dur ~ EncounterSpp+(1|ShoreDist)+(1|GroupId),
family =poisson, data = CetaceanWaitingTimes)
m3 <- glmer(Dur ~ EncounterSpp+GroupId+(1|ShoreDist),
family =poisson, data = CetaceanWaitingTimes)
