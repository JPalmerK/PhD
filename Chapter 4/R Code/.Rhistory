#dat1$Col <- rbPal(10)[as.numeric(cut(dat1$fit,breaks = 20))]
dat1$Col <- heat.colors(20)[as.numeric(cut(dat1$fit,
breaks = as.numeric(quantile(unlist(preds), seq(.01, .99, length.out = 20)))))]
dat1$ColLCI <- heat.colors(20)[as.numeric(cut(dat1$LCI,
breaks = as.numeric(quantile(unlist(preds), seq(.01, .99, length.out = 20)))))]
dat1$ColUCI <- heat.colors(20)[as.numeric(cut(dat1$UCI,
breaks = as.numeric(quantile(unlist(preds), seq(.01, .99, length.out = 20)))))]
dat1$Season=as.character(Preddat$Season)
# Plot the bathymetry
blues <- c("lightsteelblue4", "lightsteelblue3",
"lightsteelblue2", "lightsteelblue1")
greys <- c(grey(0.6), grey(0.93), grey(0.99))
# png(filename = paste(Preddat$Season[1], '.png'),
#     units="in",
#     width=7,
#     height=9,
#     pointsize=12,res = 400)
op<-par(no.readonly=TRUE)
par(op)
par(oma=c(2,2,0,4),mar=c(3,3,2,1),mfrow=c(2,2),pch=16)
#  fit
plot(NorthSea, n = 0, lwd = 0.5, image=TRUE,
bpal = list(c(0, 10, grey(.7), grey(.9), grey(.95)),
c(min(NorthSea), 1, "darkblue", "lightblue")),
main= paste(Preddat$Season[1], 'fit'))
scaleBathy(NorthSea, deg=1, x="bottomleft", y=NULL, inset=10, angle=90)
points(x = dat1$Depth.lon, y=dat1$Depth.lat,
pch = 20,
col = dat1$Col, main=Preddat$Season[1])
#points(river_locs, pch=18, col='blue')
#image.plot(legend.only = TRUE,zlim=range(unlist(preds)), col = heat.colors(20),)
points(meta2,
pch = 18,
col = 'black')
#  LCI
plot(NorthSea, n = 0, lwd = 0.5, image=TRUE,
bpal = list(c(0, 10, grey(.7), grey(.9), grey(.95)),
c(min(NorthSea), 1, "darkblue", "lightblue")),
main=paste(Preddat$Season[1], 'LCI'))
scaleBathy(NorthSea, deg=1, x="bottomleft", y=NULL, inset=10, angle=90)
points(x = dat1$Depth.lon, y=dat1$Depth.lat,
pch = 20,
col = dat1$ColLCI, main=Preddat$Season[1])
points(meta2,
pch = 18,
col = 'black')
# UCI
plot(NorthSea, n = 0, lwd = 0.5, image=TRUE,
bpal = list(c(0, 10, grey(.7), grey(.9), grey(.95)),
c(min(NorthSea), 1, "darkblue", "lightblue")),
main=paste(Preddat$Season[1], 'UCI'))
scaleBathy(NorthSea, deg=1, x="bottomleft", y=NULL, inset=10, angle=90)
points(x = dat1$Depth.lon, y=dat1$Depth.lat,
pch = 20,
col = dat1$ColUCI, main=Preddat$Season[1])
points(meta2,
pch = 18,
col = 'black')
mtext(text="Longitude",side=1,line=0,outer=TRUE)
mtext(text="Latitude",side=2,line=0,outer=TRUE)
image.plot(legend.only = TRUE,zlim=range(unlist(preds)),
col = heat.colors(20), legend.mar = 0, legend.shrink = .8,
legend.width = 1.2)
dev.off()
}
for(ii in 1:3){
# Filter by distance
dat1=dat[dat$DistToShore<(max(meta2$DistToShore)+2000),]
Preddat=data.frame(SlopeMap=dat1$Slope,
Depth_m=dat1$Depth.depth,
DistToSalmonRun=dat1$DistToSalmonRun,
BNDTotOffset=rep(0, nrow(dat1)),
DistToShore=dat1$DistToShore,
Season= unique(OccTable_daily$Season)[ii])
preds=predict(modlist_spatial[[11]], Preddat, se.fit=TRUE)
preds$UCI=preds$fit+(1.96*preds$se.fit)
preds$LCI=preds$fit-(1.96*preds$se.fit)
preds[]<-lapply(preds, inv.logit)
dat1=cbind(dat1, preds)
rbPal <- colorRampPalette(c('red','blue'))
#dat1$Col <- rbPal(10)[as.numeric(cut(dat1$fit,breaks = 20))]
dat1$Col <- heat.colors(20)[as.numeric(cut(dat1$fit,
breaks = as.numeric(quantile(unlist(preds), seq(.01, .99, length.out = 20)))))]
dat1$ColLCI <- heat.colors(20)[as.numeric(cut(dat1$LCI,
breaks = as.numeric(quantile(unlist(preds), seq(.01, .99, length.out = 20)))))]
dat1$ColUCI <- heat.colors(20)[as.numeric(cut(dat1$UCI,
breaks = as.numeric(quantile(unlist(preds), seq(.01, .99, length.out = 20)))))]
dat1$Season=as.character(Preddat$Season)
# Plot the bathymetry
blues <- c("lightsteelblue4", "lightsteelblue3",
"lightsteelblue2", "lightsteelblue1")
greys <- c(grey(0.6), grey(0.93), grey(0.99))
# png(filename = paste(Preddat$Season[1], '.png'),
#     units="in",
#     width=7,
#     height=9,
#     pointsize=12,res = 400)
op<-par(no.readonly=TRUE)
par(op)
par(oma=c(2,2,0,4),mar=c(3,3,2,1),mfrow=c(2,2),pch=16)
#  fit
plot(NorthSea, n = 0, lwd = 0.5, image=TRUE,
bpal = list(c(0, 10, grey(.7), grey(.9), grey(.95)),
c(min(NorthSea), 1, "darkblue", "lightblue")),
main= paste(Preddat$Season[1], 'fit'))
scaleBathy(NorthSea, deg=1, x="bottomleft", y=NULL, inset=10, angle=90)
points(x = dat1$Depth.lon, y=dat1$Depth.lat,
pch = 20,
col = dat1$Col, main=Preddat$Season[1])
#points(river_locs, pch=18, col='blue')
#image.plot(legend.only = TRUE,zlim=range(unlist(preds)), col = heat.colors(20),)
points(meta2,
pch = 18,
col = 'black')
#  LCI
plot(NorthSea, n = 0, lwd = 0.5, image=TRUE,
bpal = list(c(0, 10, grey(.7), grey(.9), grey(.95)),
c(min(NorthSea), 1, "darkblue", "lightblue")),
main=paste(Preddat$Season[1], 'LCI'))
scaleBathy(NorthSea, deg=1, x="bottomleft", y=NULL, inset=10, angle=90)
points(x = dat1$Depth.lon, y=dat1$Depth.lat,
pch = 20,
col = dat1$ColLCI, main=Preddat$Season[1])
points(meta2,
pch = 18,
col = 'black')
# UCI
plot(NorthSea, n = 0, lwd = 0.5, image=TRUE,
bpal = list(c(0, 10, grey(.7), grey(.9), grey(.95)),
c(min(NorthSea), 1, "darkblue", "lightblue")),
main=paste(Preddat$Season[1], 'UCI'))
scaleBathy(NorthSea, deg=1, x="bottomleft", y=NULL, inset=10, angle=90)
points(x = dat1$Depth.lon, y=dat1$Depth.lat,
pch = 20,
col = dat1$ColUCI, main=Preddat$Season[1])
points(meta2,
pch = 18,
col = 'black')
mtext(text="Longitude",side=1,line=0,outer=TRUE)
mtext(text="Latitude",side=2,line=0,outer=TRUE)
image.plot(legend.only = TRUE,zlim=range(unlist(preds)),
col = heat.colors(20), legend.mar = 0, legend.shrink = .8,
legend.width = 1.2)
# dev.off()
}
summary(modlist_spatial[[10]])
summary(modlist_spatial[[10]]$gam)
summary(modlist_spatial[[11]]$gam)
plot(modlist_spatial[[11]]$gam)
plot(modlist_spatial[[10]]$gam)
par(mfrow=c(1,1))
plot(modlist_spatial[[10]]$gam)
summary(modlist_spatial[[10]]$gam)
summary(modlist_spatial[[11]]$gam)
CalcAUC(modlist_spatial[[11]], OccTable_daily, BinaryResponse_var = 'BBOcc')
summary(modlist_spatial[[11]]$gam)
summary(modlist_spatial[[10]]$gam)
CalcAUC(modlist_spatial[[10]], OccTable_daily, BinaryResponse_var = 'BBOcc')
for(ii in 1:3){
# Filter by distance
dat1=dat[dat$DistToShore<(max(meta2$DistToSalmonRun)+2000),]
dat1=dat[dat$SlopeMap<(max(meta2$SlopeMap)),]
Preddat=data.frame(SlopeMap=dat1$Slope,
Depth_m=dat1$Depth.depth,
DistToSalmonRun=dat1$DistToSalmonRun,
BNDTotOffset=rep(0, nrow(dat1)),
DistToShore=dat1$DistToShore,
Season= unique(OccTable_daily$Season)[ii])
preds=predict(modlist_spatial[[10]], Preddat, se.fit=TRUE)
preds$UCI=preds$fit+(1.96*preds$se.fit)
preds$LCI=preds$fit-(1.96*preds$se.fit)
preds[]<-lapply(preds, inv.logit)
dat1=cbind(dat1, preds)
rbPal <- colorRampPalette(c('red','blue'))
#dat1$Col <- rbPal(10)[as.numeric(cut(dat1$fit,breaks = 20))]
dat1$Col <- heat.colors(20)[as.numeric(cut(dat1$fit,
breaks = as.numeric(quantile(unlist(preds), seq(.01, .99, length.out = 20)))))]
dat1$ColLCI <- heat.colors(20)[as.numeric(cut(dat1$LCI,
breaks = as.numeric(quantile(unlist(preds), seq(.01, .99, length.out = 20)))))]
dat1$ColUCI <- heat.colors(20)[as.numeric(cut(dat1$UCI,
breaks = as.numeric(quantile(unlist(preds), seq(.01, .99, length.out = 20)))))]
dat1$Season=as.character(Preddat$Season)
# Plot the bathymetry
blues <- c("lightsteelblue4", "lightsteelblue3",
"lightsteelblue2", "lightsteelblue1")
greys <- c(grey(0.6), grey(0.93), grey(0.99))
# png(filename = paste(Preddat$Season[1], '.png'),
#     units="in",
#     width=7,
#     height=9,
#     pointsize=12,res = 400)
op<-par(no.readonly=TRUE)
par(op)
par(oma=c(2,2,0,4),mar=c(3,3,2,1),mfrow=c(2,2),pch=16)
#  fit
plot(NorthSea, n = 0, lwd = 0.5, image=TRUE,
bpal = list(c(0, 10, grey(.7), grey(.9), grey(.95)),
c(min(NorthSea), 1, "darkblue", "lightblue")),
main= paste(Preddat$Season[1], 'fit'))
scaleBathy(NorthSea, deg=1, x="bottomleft", y=NULL, inset=10, angle=90)
points(x = dat1$Depth.lon, y=dat1$Depth.lat,
pch = 20,
col = dat1$Col, main=Preddat$Season[1])
#points(river_locs, pch=18, col='blue')
#image.plot(legend.only = TRUE,zlim=range(unlist(preds)), col = heat.colors(20),)
points(meta2,
pch = 18,
col = 'black')
#  LCI
plot(NorthSea, n = 0, lwd = 0.5, image=TRUE,
bpal = list(c(0, 10, grey(.7), grey(.9), grey(.95)),
c(min(NorthSea), 1, "darkblue", "lightblue")),
main=paste(Preddat$Season[1], 'LCI'))
scaleBathy(NorthSea, deg=1, x="bottomleft", y=NULL, inset=10, angle=90)
points(x = dat1$Depth.lon, y=dat1$Depth.lat,
pch = 20,
col = dat1$ColLCI, main=Preddat$Season[1])
points(meta2,
pch = 18,
col = 'black')
# UCI
plot(NorthSea, n = 0, lwd = 0.5, image=TRUE,
bpal = list(c(0, 10, grey(.7), grey(.9), grey(.95)),
c(min(NorthSea), 1, "darkblue", "lightblue")),
main=paste(Preddat$Season[1], 'UCI'))
scaleBathy(NorthSea, deg=1, x="bottomleft", y=NULL, inset=10, angle=90)
points(x = dat1$Depth.lon, y=dat1$Depth.lat,
pch = 20,
col = dat1$ColUCI, main=Preddat$Season[1])
points(meta2,
pch = 18,
col = 'black')
mtext(text="Longitude",side=1,line=0,outer=TRUE)
mtext(text="Latitude",side=2,line=0,outer=TRUE)
image.plot(legend.only = TRUE,zlim=range(unlist(preds)),
col = heat.colors(20), legend.mar = 0, legend.shrink = .8,
legend.width = 1.2)
# dev.off()
}
dat1=dat[dat$DistToShore<(max(meta2$DistToSalmonRun)+2000),]
dat1=dat1[dat1$SlopeMap<(max(meta2$SlopeMap)),]
Preddat=data.frame(SlopeMap=dat1$Slope,
Depth_m=dat1$Depth.depth,
DistToSalmonRun=dat1$DistToSalmonRun,
BNDTotOffset=rep(0, nrow(dat1)),
DistToShore=dat1$DistToShore,
Season= unique(OccTable_daily$Season)[ii])
dat1$Slope
dat1=dat[dat$DistToShore<(max(meta2$DistToSalmonRun)+2000),]
max(meta2$SlopeMap)
dat1=dat1[dat1$Slope<(max(meta2$SlopeMap)),]
Preddat=data.frame(SlopeMap=dat1$Slope,
Depth_m=dat1$Depth.depth,
DistToSalmonRun=dat1$DistToSalmonRun,
BNDTotOffset=rep(0, nrow(dat1)),
DistToShore=dat1$DistToShore,
Season= unique(OccTable_daily$Season)[ii])
preds=predict(modlist_spatial[[10]], Preddat, se.fit=TRUE)
preds$UCI=preds$fit+(1.96*preds$se.fit)
preds$LCI=preds$fit-(1.96*preds$se.fit)
preds[]<-lapply(preds, inv.logit)
dat1=cbind(dat1, preds)
rbPal <- colorRampPalette(c('red','blue'))
dat1$Col <- heat.colors(20)[as.numeric(cut(dat1$fit,
breaks = as.numeric(quantile(unlist(preds), seq(.01, .99, length.out = 20)))))]
dat1$ColLCI <- heat.colors(20)[as.numeric(cut(dat1$LCI,
breaks = as.numeric(quantile(unlist(preds), seq(.01, .99, length.out = 20)))))]
dat1$ColUCI <- heat.colors(20)[as.numeric(cut(dat1$UCI,
breaks = as.numeric(quantile(unlist(preds), seq(.01, .99, length.out = 20)))))]
dat1$Season=as.character(Preddat$Season)
blues <- c("lightsteelblue4", "lightsteelblue3",
"lightsteelblue2", "lightsteelblue1")
greys <- c(grey(0.6), grey(0.93), grey(0.99))
op<-par(no.readonly=TRUE)
par(op)
par(oma=c(2,2,0,4),mar=c(3,3,2,1),mfrow=c(2,2),pch=16)
plot(NorthSea, n = 0, lwd = 0.5, image=TRUE,
bpal = list(c(0, 10, grey(.7), grey(.9), grey(.95)),
c(min(NorthSea), 1, "darkblue", "lightblue")),
main= paste(Preddat$Season[1], 'fit'))
scaleBathy(NorthSea, deg=1, x="bottomleft", y=NULL, inset=10, angle=90)
points(x = dat1$Depth.lon, y=dat1$Depth.lat,
pch = 20,
col = dat1$Col, main=Preddat$Season[1])
points(meta2,
pch = 18,
col = 'black')
plot(NorthSea, n = 0, lwd = 0.5, image=TRUE,
bpal = list(c(0, 10, grey(.7), grey(.9), grey(.95)),
c(min(NorthSea), 1, "darkblue", "lightblue")),
main=paste(Preddat$Season[1], 'LCI'))
scaleBathy(NorthSea, deg=1, x="bottomleft", y=NULL, inset=10, angle=90)
points(x = dat1$Depth.lon, y=dat1$Depth.lat,
pch = 20,
col = dat1$ColLCI, main=Preddat$Season[1])
points(meta2,
pch = 18,
col = 'black')
plot(NorthSea, n = 0, lwd = 0.5, image=TRUE,
bpal = list(c(0, 10, grey(.7), grey(.9), grey(.95)),
c(min(NorthSea), 1, "darkblue", "lightblue")),
main=paste(Preddat$Season[1], 'UCI'))
scaleBathy(NorthSea, deg=1, x="bottomleft", y=NULL, inset=10, angle=90)
points(x = dat1$Depth.lon, y=dat1$Depth.lat,
pch = 20,
col = dat1$ColUCI, main=Preddat$Season[1])
points(meta2,
pch = 18,
col = 'black')
mtext(text="Longitude",side=1,line=0,outer=TRUE)
mtext(text="Latitude",side=2,line=0,outer=TRUE)
image.plot(legend.only = TRUE,zlim=range(unlist(preds)),
col = heat.colors(20), legend.mar = 0, legend.shrink = .8,
legend.width = 1.2)
}
range(meta2$DistToShore)
range(meta2$Depth_m)
range(meta2$SlopeMap)
range(meta2$DistToSalmonRun)
summary(modlist_spatial[[10]]$gam)
range(OccTable_daily$Month)
View(meta2)
acf_val=data.frame(UnitLoc=factor(),
lag=numeric(),
acf_score=numeric,
GroupId=factor(),
Shoredist=numeric())
for(ii in 1:30){
#idx=which(data_detections$UnitLoc==unique(data_detections$UnitLoc)[ii])
#data_detections$DiffDays[idx]=c(0,data_detections$JulienDay[idx[2:length(idx)]]-data_detections$JulienDay[idx[1:(length(idx)-1)]])
mm=acf(OccTable_daily$BNDTotOffset[OccTable_daily$UnitLoc== levels(OccTable$UnitLoc)[ii]], plot = F)
acf_val=rbind(acf_val, data.frame(acf_score=mm$acf,
lag=mm$lag,
GroupId= strsplit(levels(OccTable$UnitLoc)[ii], split = '_')[[1]][1],
ShoreDist= strsplit(levels(OccTable$UnitLoc)[ii], split = '_')[[1]][2],
UnitLoc=levels(OccTable$UnitLoc)[ii]))
rm(mm)
}
head(acf_val)
acf_val$jlag=ifelse(acf_val$ShoreDist=='05', acf_val$lag, acf_val$lag+.01)
acf_val$jlag=acf_val$jlag[acf_val$ShoreDist=='15']=acf_val$lag+.02
acf_val$jlag=ifelse(acf_val$ShoreDist=='05', acf_val$lag, acf_val$lag+.01)
acf_val$jlag[acf_val$ShoreDist=='15']=acf_val$lag+.02
acf_val$jlag=ifelse(acf_val$ShoreDist=='05', acf_val$lag, acf_val$lag+.01)
acf_val$jlag=ifelse(acf_val$ShoreDist=='05', acf_val$lag, acf_val$lag+.01)
acf_val$jlag[acf_val$ShoreDist=='15']=acf_val$lag[acf_val$ShoreDist=='15']+.02
ggplot(acf_val, aes(x=lag, y=acf_score)) +
facet_wrap(~GroupId) +
geom_segment(aes(x = jlag, y = 0, xend = jlag, yend = acf_score, color=ShoreDist)) +
scale_color_manual(name="Shore Distance",
breaks=levels(OccTable$ShoreDist),
labels=c("Near", "Mid", "Off"),
values=cbbPalette) +
geom_hline(yintercept = c(0.1, -.1), lty=2, color='red') +
theme_bw() +
xlab('Lag Days')+
ylab('ACF')
acf_val$jlag=ifelse(acf_val$ShoreDist=='05', acf_val$lag, acf_val$lag+.02)
acf_val$jlag[acf_val$ShoreDist=='15']=acf_val$lag[acf_val$ShoreDist=='15']+.04
jitter(acf_val$lag)
ggplot(acf_val, aes(x=lag, y=acf_score)) +
facet_wrap(~GroupId) +
geom_segment(aes(x = jlag, y = 0, xend = jlag, yend = acf_score, color=ShoreDist)) +
scale_color_manual(name="Shore Distance",
breaks=levels(OccTable$ShoreDist),
labels=c("Near", "Mid", "Off"),
values=cbbPalette) +
geom_hline(yintercept = c(0.1, -.1), lty=2, color='red') +
theme_bw() +
xlab('Lag (Days)')+
ylab('ACF')
acf_val$jlag=ifelse(acf_val$ShoreDist=='05', acf_val$lag, acf_val$lag+.04)
acf_val$jlag[acf_val$ShoreDist=='15']=acf_val$lag[acf_val$ShoreDist=='15']+.06
ggplot(acf_val, aes(x=lag, y=acf_score)) +
facet_wrap(~GroupId) +
geom_segment(aes(x = jlag, y = 0, xend = jlag, yend = acf_score, color=ShoreDist)) +
scale_color_manual(name="Shore Distance",
breaks=levels(OccTable$ShoreDist),
labels=c("Near", "Mid", "Off"),
values=cbbPalette) +
geom_hline(yintercept = c(0.1, -.1), lty=2, color='red') +
theme_bw() +
xlab('Lag (Days)')+
ylab('ACF')
acf_val$jlag=ifelse(acf_val$ShoreDist=='05', acf_val$lag, acf_val$lag+.1)
acf_val$jlag[acf_val$ShoreDist=='15']=acf_val$lag[acf_val$ShoreDist=='15']+.2
jitter(acf_val$lag)
ggplot(acf_val, aes(x=lag, y=acf_score)) +
facet_wrap(~GroupId) +
geom_segment(aes(x = jlag, y = 0, xend = jlag, yend = acf_score, color=ShoreDist)) +
scale_color_manual(name="Shore Distance",
breaks=levels(OccTable$ShoreDist),
labels=c("Near", "Mid", "Off"),
values=cbbPalette) +
geom_hline(yintercept = c(0.1, -.1), lty=2, color='red') +
theme_bw() +
xlab('Lag (Days)')+
ylab('ACF')
acf_val$jlag=ifelse(acf_val$ShoreDist=='05', acf_val$lag, acf_val$lag+.05)
acf_val$jlag[acf_val$ShoreDist=='15']=acf_val$lag[acf_val$ShoreDist=='15']+.1
jitter(acf_val$lag)
ggplot(acf_val, aes(x=lag, y=acf_score)) +
facet_wrap(~GroupId) +
geom_segment(aes(x = jlag, y = 0, xend = jlag, yend = acf_score, color=ShoreDist)) +
scale_color_manual(name="Shore Distance",
breaks=levels(OccTable$ShoreDist),
labels=c("Near", "Mid", "Off"),
values=cbbPalette) +
geom_hline(yintercept = c(0.1, -.1), lty=2, color='red') +
theme_bw() +
xlab('Lag (Days)')+
ylab('ACF')
acf_val$jlag=ifelse(acf_val$ShoreDist=='05', acf_val$lag, acf_val$lag+.2)
acf_val$jlag[acf_val$ShoreDist=='15']=acf_val$lag[acf_val$ShoreDist=='15']+.3
jitter(acf_val$lag)
ams
acf_val$jlag=ifelse(acf_val$ShoreDist=='05', acf_val$lag, acf_val$lag+.2)
acf_val$jlag[acf_val$ShoreDist=='15']=acf_val$lag[acf_val$ShoreDist=='15']+.3
jitter(acf_val$lag)
ggplot(acf_val, aes(x=lag, y=acf_score)) +
facet_wrap(~GroupId) +
geom_segment(aes(x = jlag, y = 0, xend = jlag, yend = acf_score, color=ShoreDist)) +
scale_color_manual(name="Shore Distance",
breaks=levels(OccTable$ShoreDist),
labels=c("Near", "Mid", "Off"),
values=cbbPalette) +
geom_hline(yintercept = c(0.1, -.1), lty=2, color='red') +
theme_bw() +
xlab('Lag (Days)')+
ylab('ACF')
acf_val$jlag=ifelse(acf_val$ShoreDist=='05', acf_val$lag, acf_val$lag+.2)
acf_val$jlag[acf_val$ShoreDist=='15']=acf_val$lag[acf_val$ShoreDist=='15']+.4
jitter(acf_val$lag)
ggplot(acf_val, aes(x=lag, y=acf_score)) +
facet_wrap(~GroupId) +
geom_segment(aes(x = jlag, y = 0, xend = jlag, yend = acf_score, color=ShoreDist)) +
scale_color_manual(name="Shore Distance",
breaks=levels(OccTable$ShoreDist),
labels=c("Near", "Mid", "Off"),
values=cbbPalette) +
geom_hline(yintercept = c(0.1, -.1), lty=2, color='red') +
theme_bw() +
xlab('Lag (Days)')+
ylab('ACF')
png(filename = paste('ACF Values'),
units="in",
width=5,
height=7,
pointsize=12,res = 400)
ggplot(acf_val, aes(x=lag, y=acf_score)) +
facet_wrap(~GroupId) +
geom_segment(aes(x = jlag, y = 0, xend = jlag, yend = acf_score, color=ShoreDist)) +
scale_color_manual(name="Shore Distance",
breaks=levels(OccTable$ShoreDist),
labels=c("Near", "Mid", "Off"),
values=cbbPalette) +
geom_hline(yintercept = c(0.1, -.1), lty=2, color='red') +
theme_bw() +
xlab('Lag (Days)')+
ylab('Autocorrelation Score')
dev.off()
png(filename = paste('ACF Values.png'),
units="in",
width=5,
height=7,
pointsize=12,res = 400)
ggplot(acf_val, aes(x=lag, y=acf_score)) +
facet_wrap(~GroupId) +
geom_segment(aes(x = jlag, y = 0, xend = jlag, yend = acf_score, color=ShoreDist)) +
scale_color_manual(name="Shore Distance",
breaks=levels(OccTable$ShoreDist),
labels=c("Near", "Mid", "Off"),
values=cbbPalette) +
geom_hline(yintercept = c(0.1, -.1), lty=2, color='red') +
theme_bw() +
xlab('Lag (Days)')+
ylab('Autocorrelation Score')
dev.off()
png(filename = paste('ACF Values.png'),
units="in",
width=5,
height=5,
pointsize=12,res = 400)
ggplot(acf_val, aes(x=lag, y=acf_score)) +
facet_wrap(~GroupId) +
geom_segment(aes(x = jlag, y = 0, xend = jlag, yend = acf_score, color=ShoreDist)) +
scale_color_manual(name="Shore Distance",
breaks=levels(OccTable$ShoreDist),
labels=c("Near", "Mid", "Off"),
values=cbbPalette) +
geom_hline(yintercept = c(0.1, -.1), lty=2, color='red') +
theme_bw() +
xlab('Lag (Days)')+
ylab('Autocorrelation Score')
dev.off()
png(filename = paste('ACF Values.png'),
units="in",
width=6,
height=6,
pointsize=12,res = 400)
ggplot(acf_val, aes(x=lag, y=acf_score)) +
facet_wrap(~GroupId) +
geom_segment(aes(x = jlag, y = 0, xend = jlag, yend = acf_score, color=ShoreDist)) +
scale_color_manual(name="Shore Distance",
breaks=levels(OccTable$ShoreDist),
labels=c("Near", "Mid", "Off"),
values=cbbPalette) +
geom_hline(yintercept = c(0.1, -.1), lty=2, color='red') +
theme_bw() +
xlab('Lag (Days)')+
ylab('Autocorrelation Score')
dev.off()
